let express = require("express");
let mongoose = require("mongoose");
let cors = require("cors");
//----------------------------------------
// configure modules
let app = express();
// middleware
app.use(express.json());
app.use(cors());
//----------------------------------------
// configure database
let Schema = mongoose.Schema;
let ObjectId = Schema.ObjectId;
let Hero = mongoose.model("Hero", new Schema({
    id : ObjectId,
    firstname : String,
    lastname : String,
    city : String,
    power : Number
}));
const dataurl = "your database access string comes here";
mongoose.connect(dataurl)
.then(()=> console.log("DB Connected"))
.catch((err)=>console.log("Error ",err));

//----------------------------------------
// configure routes
// READ
app.get("/data",(req, res)=>{
    Hero.find((error, heroes)=>{
        if(error){ console.log("Error ", error )}
        else{ res.json( heroes )}
    })
})
// CREATE
app.post("/data",(req, res)=>{
    let hero = new Hero(req.body);
    hero.save()
    .then(()=> res.status(200).json({ "message" : "hero was saved to database" }))
    .catch((err)=>res.status(400).json(err))
})
// READ BEFORE UPDATE
app.get("/edit/:id", (req, res)=>{
    Hero.findById(req.params.id, (error, hero)=>{
        if(error){ console.log("Error ", error )}
        else{ res.status(200).json(hero)}
    })
})
// UPDATE
app.post("/edit/:id",(req, res)=>{
    Hero.findById(req.params.id, (error, hero)=>{
        if(error){ console.log("Error ", error )}
        else{
            hero.firstname = req.body.firstname;
            hero.lastname = req.body.lastname;
            hero.power = req.body.power;
            hero.city = req.body.city;
            hero.save()
            .then(savedHero => res.status(200).json({ "savedHero" : savedHero }))
            .catch((error)=>res.status(400).json({ "error" : error }))
        }
    })
})
// DELETE
app.delete("/delete/:id",(req, res)=>{
    Hero.findByIdAndDelete({ _id : req.params.id }, (error, deletedhero)=>{
        if(error){ console.log("Error ", error )}
        else{ res.status(200).json({"message":"hero was removed from database", "herodata" : deletedhero})}
    })
})

//----------------------------------------
// configure webserver
app.listen(5050,"localhost",(err)=>{
    if(err){ console.log("Error ", err)}
    else{ console.log("web server is now live on localhost:5050") }
});
